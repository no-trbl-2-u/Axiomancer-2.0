version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=axiomancer_staging
      - POSTGRES_USER=axiomancer_user
      - POSTGRES_PASSWORD=staging_password_change_in_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U axiomancer_user -d axiomancer_staging"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend service
  backend:
    build:
      context: ./axiomancer-backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=staging
      - PORT=3001
      - JWT_SECRET=staging-secret-key-change-this
      - JWT_EXPIRES_IN=24h
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=axiomancer_staging
      - DB_USER=axiomancer_user
      - DB_PASSWORD=staging_password_change_in_production
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend service
  frontend:
    build:
      context: ./axiomancer-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:3001/api
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  default:
    name: axiomancer-staging